// <auto-generated />
using System;
using APITemplate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APITemplate.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251013235548_DummyMigration")]
    partial class DummyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APITemplate.Models.BARRIOS", b =>
                {
                    b.Property<int>("Id_barrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_barrio"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_barrio");

                    b.ToTable("BARRIOS");
                });

            modelBuilder.Entity("APITemplate.Models.CARACTERISTICAS_PROPIEDAD", b =>
                {
                    b.Property<int>("Id_caracteristica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_caracteristica"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Id_propiedad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PROPIEDADESId_propiedad")
                        .HasColumnType("int");

                    b.HasKey("Id_caracteristica");

                    b.HasIndex("PROPIEDADESId_propiedad");

                    b.ToTable("CARACTERISTICAS_PROPIEDAD");
                });

            modelBuilder.Entity("APITemplate.Models.FOTOS_PROPIEDAD", b =>
                {
                    b.Property<int>("Id_foto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_foto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Es_principal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_subida")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_propiedad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_archivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Orden_visualizacion")
                        .HasColumnType("int");

                    b.Property<int?>("PROPIEDADESId_propiedad")
                        .HasColumnType("int");

                    b.Property<string>("Ruta_archivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id_foto");

                    b.HasIndex("PROPIEDADESId_propiedad");

                    b.ToTable("FOTOS_PROPIEDAD");
                });

            modelBuilder.Entity("APITemplate.Models.PROPIEDADES", b =>
                {
                    b.Property<int>("Id_propiedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_propiedad"));

                    b.Property<int?>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<int?>("Cochera")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EsDestacada")
                        .HasColumnType("bit");

                    b.Property<int?>("Fabricacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Alta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Habitaciones")
                        .HasColumnType("int");

                    b.Property<int>("Id_barrio")
                        .HasColumnType("int");

                    b.Property<int>("Id_tipo")
                        .HasColumnType("int");

                    b.Property<int?>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Patente")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Sanitario")
                        .HasColumnType("int");

                    b.Property<string>("Servicios_incluidos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subtitulo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Superficie_construida")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Superficie_terreno")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id_propiedad");

                    b.HasIndex("Id_barrio");

                    b.ToTable("PROPIEDADES");
                });

            modelBuilder.Entity("APITemplate.Models.USUARIOS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("APITemplate.Models.CARACTERISTICAS_PROPIEDAD", b =>
                {
                    b.HasOne("APITemplate.Models.PROPIEDADES", null)
                        .WithMany("Caracteristicas")
                        .HasForeignKey("PROPIEDADESId_propiedad");
                });

            modelBuilder.Entity("APITemplate.Models.FOTOS_PROPIEDAD", b =>
                {
                    b.HasOne("APITemplate.Models.PROPIEDADES", null)
                        .WithMany("Fotos")
                        .HasForeignKey("PROPIEDADESId_propiedad");
                });

            modelBuilder.Entity("APITemplate.Models.PROPIEDADES", b =>
                {
                    b.HasOne("APITemplate.Models.BARRIOS", "Barrio")
                        .WithMany()
                        .HasForeignKey("Id_barrio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barrio");
                });

            modelBuilder.Entity("APITemplate.Models.PROPIEDADES", b =>
                {
                    b.Navigation("Caracteristicas");

                    b.Navigation("Fotos");
                });
#pragma warning restore 612, 618
        }
    }
}
